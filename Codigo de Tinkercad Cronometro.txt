LINK A PROJECTO DE TINKERCARD: 
https://www.tinkercad.com/things/1jyqK22VRD5-tp1-spd-1f-cronometro/editel?sharecode=IFSH-o8d8kPp9keCNNjjKASMT8WSJPO0Elb1Q3x4nHI

// C++ code
//  

//Declaramos constantes para definir las entradas
#define A 4
#define B 5
#define C 6
#define D 7
#define E 8
#define F 9
#define G 10
#define H 11
#define I 12
#define J 13
#define RESET 3
#define PAUSA 2

int pulsadorUno = 0;
int pulsadorDos = 0;
int segundos;
int contador = 0;

void setup()
{
  //Activamos los pines de entrada y salida  
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(H, OUTPUT);
  pinMode(I, OUTPUT);
  pinMode(J, OUTPUT);
  pinMode(RESET, INPUT);
  pinMode(PAUSA, INPUT);
  Serial.begin(9600);
}

void loop()
{
  //Leemos el valor de los pines
  pulsadorUno = digitalRead(PAUSA);
  pulsadorDos = digitalRead(RESET);
  
  segundos = millis()/1000;
  
  //Encendemos los leds de acuerdo al tiempo transcurrido y sumamos el contador
  if(pulsadorUno == HIGH)
  {    
    iniciarLeds(segundos);
  }
  
  //Si el pulsador de reset esta siendo apretado y el pausar/continuar esta sin ser presionado, reseteamos el contador a 0
  if(pulsadorDos == HIGH && pulsadorUno == LOW)
  {
    resetearLeds(contador);
  }
  
  //delay(50);
}

//Esta funcion se encarga de prender los leds, recibiendo como parametro un entero, que corresponde a los segundos transcurridos. No retorna nada.
void iniciarLeds (int digito)
{    
  switch(digito){
      case 0:
      digitalWrite(A, LOW);
  	  digitalWrite(B, LOW);
      digitalWrite(C, LOW);
      digitalWrite(D, LOW);  
      digitalWrite(E, LOW);
      digitalWrite(F, LOW);
      digitalWrite(G, LOW);
      digitalWrite(H, LOW);
      digitalWrite(I, LOW);
      digitalWrite(J, LOW);
      break;
      case 1:
  	  digitalWrite(A, HIGH);
      contador++;     
      break;
      case 2:
      digitalWrite(A, LOW);
  	  digitalWrite(B, HIGH);
      contador++; 
      break;
      case 3:
  	  digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      contador++;
      break;
      case 4:
      digitalWrite(A, LOW);
      digitalWrite(B, LOW);
  	  digitalWrite(C, HIGH);
      contador++;
      break;
      case 5:
      digitalWrite(A, HIGH);
  	  digitalWrite(C, HIGH); 
      contador++;
      break;
      case 6:
      digitalWrite(A, LOW);
      digitalWrite(B, HIGH);
  	  digitalWrite(C, HIGH);
      contador++;
      break;
      case 7:
  	  digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
  	  digitalWrite(C, HIGH);
      contador++;
      break;
      case 8:
      digitalWrite(A, LOW);
      digitalWrite(B, LOW);
  	  digitalWrite(C, LOW);
  	  digitalWrite(D, HIGH);
      contador++;
      break;
      case 9:
      digitalWrite(A, HIGH);
  	  digitalWrite(D, HIGH);
      contador++;
      break;
      case 10:
      digitalWrite(A, LOW);
  	  digitalWrite(B, HIGH);
      digitalWrite(D, HIGH);
      contador++;
      break;
    }  
}

//Esta funcion se encarga de resetear el contador de tiempo a 0, recibiendo como parametro un entero, que corresponde al contador de tiempo. No retorna nada.
void resetearLeds (int digito)
{  
  digito = 0;
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);  
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
  digitalWrite(H, LOW);
  digitalWrite(I, LOW);
  digitalWrite(J, LOW);
  
}